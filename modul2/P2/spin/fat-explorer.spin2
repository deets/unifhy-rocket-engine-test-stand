con
  _clkfreq = 300_000_000

  DEBUG_BAUD  = 2_000_000

  BUFFER_SIZE = 65536
  SECTOR_SIZE = 512
var
  BYTE buffer[BUFFER_SIZE]
  BYTE arg1[command.INPUT_BUFFER_SIZE]
  BYTE sector[SECTOR_SIZE]
  LONG input_position
  BYTE echo
obj
  fat: "FAT32"
  util: "util"
  serial: "jm_fullduplexserial"
  conf: "configuration"
  command: "command"

pub main(): result | cmd
  serial.start(conf.RX0, conf.TX0, %0000, conf.BR_SERIAL)
  send := @serial.fstr0
  banner()
  result := fat.start(conf.SD_DO, conf.SD_CLK, conf.SD_DI, conf.SD_CS, conf.SD_SPI_SPEED, 0)
  if result == -1
    serial.fstr0(string("Error starting"))
    repeat

  result := \fat.mountPartition(0)
  if result <> 0
    serial.fstr1(string("Error mounting: %s\r\n"), result)
    repeat

  repeat
    command.reset_input_buffer()
    cmd := prompt()
    case cmd
      0 :
      "l": list()
      "i": info()
      "d": dump()
      other: unknown(cmd)


pri reset_input_buffer()
    input_position := 0
    bytefill(@input_buffer, 0, INPUT_BUFFER_SIZE)


pri prompt() : result
  serial.tx(">")
  serial.tx(" ")
  return command.read_input(@serial.rxcheck, @serial.tx)


pri dump() | err
  if command.number_of_args() <> 1
    serial.fstr0(@"dump takes an argument <filename>\r\n")
  command.get_arg(@arg1)
  util.strupper(@arg1)
  err := \fat.openFile(@arg1, "R")
  if err <> 0
    serial.fstr0(err)
    nl()
  else
    dump_open_file()


pri dump_open_file() | count, i
  serial.fstr0(@"-----------------\r\n")
  repeat
    count := fat.readData(@sector, SECTOR_SIZE)
    if count == 0
      quit
    repeat i from 0 to count - 1
      serial.tx(sector[i])
  serial.fstr0(@"\r\n-----------------\r\n")


pri list() | name
  repeat
    fat.listEntries("N")
    name := fat.listName()
    if strsize(name) == 0
      quit
    serial.fstr2(@"%s %d\r\n", name, fat.listSize())


pri info() | spc
    spc := fat.partitionSectorsPerCluster()
    serial.fstr1(@"Sectors/Cluster: %d\r\n", spc)
    spc := fat.partitionCountOfClusters()
    serial.fstr1(@"Partition Cluster Count: %d\r\n", spc)


pri unknown(cmd)
  serial.fstr0(@"unknown command\r\n")


pri error()
  serial.fstr0(@"error\r\n")


pri toggle_debug()
  pinlow(conf.DEBUG_PIN)
  waitms(10)
  pinhigh(conf.DEBUG_PIN)
  waitms(10)
  pinlow(conf.DEBUG_PIN)

pri nl()
  serial.tx(13)
  serial.tx(10)

pri banner()
  serial.fstr0(string("#########################################\r\n#                                       #\r\n# FAT Explorer - (C) 2022 Diez Roggisch #\r\n#                                       #\r\n#########################################\r\n"))
  nl()