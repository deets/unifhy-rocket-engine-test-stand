con
  _clkfreq = 300_000_000

  DEBUG_BAUD  = 2_000_000

  BUFFER_SIZE = 65536
var
  BYTE buffer[BUFFER_SIZE]
  BYTE input_buffer[256]
  LONG input_position

obj
  fat: "FAT32"
  util: "util"
  serial: "jm_fullduplexserial"
  conf: "configuration"

pub main(): result | cmd
  serial.start(conf.RX0, conf.TX0, %0000, conf.BR_SERIAL)
  send := @serial.fstr0
  banner()
  result := fat.start(conf.SD_DO, conf.SD_CLK, conf.SD_DI, conf.SD_CS, conf.SD_SPI_SPEED, 0)
  if result == -1
    serial.fstr0(string("Error starting"))
    repeat

  result := \fat.mountPartition(0)
  if result <> 0
    serial.fstr1(string("Error mounting: %s\r\n"), result)
    repeat

  repeat
    cmd := prompt()
    case cmd
      0 :
      "l": list()
      other: unknown(cmd)


pri prompt() : result | char
  serial.tx(">")
  serial.tx(" ")
  result := 0
  repeat
    char := serial.rxcheck()
    if char <> -1
      ' produce echo
      if char <> 13  ' CR
        serial.tx(char)
        result := char
      else
        nl()
        return result


pri toggle_debug()
  pinlow(conf.DEBUG_PIN)
  waitms(10)
  pinhigh(conf.DEBUG_PIN)
  waitms(10)
  pinlow(conf.DEBUG_PIN)

pri nl()
  serial.tx(13)
  serial.tx(10)

pri list() | name
  repeat
    fat.listEntries("N")
    name := fat.listName()
    if strsize(name) == 0
      quit
    serial.fstr1(@"%s\r\n", name)

pri unknown(cmd)
  serial.fstr0(@"unknown command\r\n")

pri banner()
  serial.fstr0(string("#########################################\r\n#                                       #\r\n# FAT Explorer - (C) 2022 Diez Roggisch #\r\n#                                       #\r\n#########################################\r\n"))
  nl()